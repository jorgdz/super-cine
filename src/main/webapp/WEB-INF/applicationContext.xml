<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
      	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:security="http://www.springframework.org/schema/security"
		xmlns:jpa="http://www.springframework.org/schema/data/jpa"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
	
	<context:component-scan base-package="com.shopping.service"></context:component-scan>
	
	<jpa:repositories base-package="com.shopping.repository"></jpa:repositories>	
	
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />	
       	<property name="url" value="jdbc:postgresql://localhost:5432/cine?useSSL=false" />
		<property name="username" value="postgres" />
		<property name="password" value="admin" />
		<!--<property name="url" value="jdbc:postgresql://ec2-54-225-150-216.compute-1.amazonaws.com:5432/de9m8nqjsaa4tg?reconnect=true" />
		<property name="username" value="ytrrrijqykhjsa" />
		<property name="password" value="6db5c2eb12635258d527291463a83fd0ff53f7c9915dc77c50cd0990dab3724f" /> -->
    </bean>

    <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="generateDdl" value="false" />
		<property name="showSql" value="true"></property>
		<property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect" />
	</bean>
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="packagesToScan" value="com.shopping.model" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

    <security:http auto-config="true">
        <security:intercept-url pattern="/peliculas/**" access="hasAnyAuthority('EDITOR', 'GERENTE')" />
		<security:intercept-url pattern="/horarios/**" access="hasAnyAuthority('EDITOR', 'GERENTE')" />
		<security:intercept-url pattern="/noticias/**" access="hasAnyAuthority('EDITOR', 'GERENTE')" />
		<security:intercept-url pattern="/banners/**" access="hasAnyAuthority('GERENTE')" />
		<security:intercept-url pattern="/usuarios/**" access="hasAnyAuthority('GERENTE')" />
        
        <security:form-login
                login-page="/login-form"
                default-target-url="/admin/index"/>
    </security:http>

	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
    <security:authentication-manager>
        <security:authentication-provider>
        	<security:password-encoder ref="passwordEncoder"></security:password-encoder>
            <security:jdbc-user-service data-source-ref="dataSource"
                                        authorities-by-username-query="select cuenta, perfil from perfiles where cuenta = ?"
                                        users-by-username-query="select cuenta, pwd, activo from usuarios where cuenta = ?"/>
        </security:authentication-provider>
    </security:authentication-manager>


</beans>